#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHTesp.h>
#include <ESP32Servo.h>
#include <RTClib.h>
#include <Wire.h>
//#include "pitches.h"

//note
#define NOTE_B0  31
#define NOTE_C1  33
#define NOTE_CS1 35
#define NOTE_D1  37
#define NOTE_DS1 39
#define NOTE_E1  41
#define NOTE_F1  44
#define NOTE_FS1 46
#define NOTE_G1  49
#define NOTE_GS1 52
#define NOTE_A1  55
#define NOTE_AS1 58
#define NOTE_B1  62
#define NOTE_C2  65
#define NOTE_CS2 69
#define NOTE_D2  73
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 93
#define NOTE_G2  98
#define NOTE_GS2 104
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  123
#define NOTE_C3  131
#define NOTE_CS3 139
#define NOTE_D3  147
#define NOTE_DS3 156
#define NOTE_E3  165
#define NOTE_F3  175
#define NOTE_FS3 185
#define NOTE_G3  196
#define NOTE_GS3 208
#define NOTE_A3  220
#define NOTE_AS3 233
#define NOTE_B3  247
#define NOTE_C4  262
#define NOTE_CS4 277
#define NOTE_D4  294
#define NOTE_DS4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_GS4 415
#define NOTE_A4  440
#define NOTE_AS4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976
#define NOTE_C7  2093
#define NOTE_CS7 2217
#define NOTE_D7  2349
#define NOTE_DS7 2489
#define NOTE_E7  2637
#define NOTE_F7  2794
#define NOTE_FS7 2960
#define NOTE_G7  3136
#define NOTE_GS7 3322
#define NOTE_A7  3520
#define NOTE_AS7 3729
#define NOTE_B7  3951
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978

//Object
/* OLED Display */
#define SCREEN_WIDTH 128                                        // OLED width,  in pixels
#define SCREEN_HEIGHT 64                                        // 0OLED height, in pixels
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);  // create an OLED display object connected to I2C
//Adafruit_SSD1306 oled(0);

/* Servo */
const int servoPin = 4;  // Servo Pin
Servo servo;             // Servo Object
int defpos = 90;             // Servo Position

/* Push Button */
#define GREEN_BUTTON_PIN 19
#define RED_BUTTON_PIN 18
#define BLUE_BUTTON_PIN 5
#define LONG_PRESS_TIME 300
int green_button_state;
int red_button_state;
int blue_button_state;

int green_button_on_press(){
    int green_last_state=HIGH;
    int pressed_time=0;
    int released_time=0;
    for(int i=0;i<2;i++){
        green_button_state=digitalRead(GREEN_BUTTON_PIN);
        if (green_last_state == HIGH && green_button_state == LOW)       // button is pressed
            pressed_time = millis();
        else if (green_last_state == LOW && green_button_state == HIGH) { // button is released
            released_time = millis();

            long press_duration = released_time - pressed_time;

            if ( press_duration < LONG_PRESS_TIME ) {
                Serial.println("Green Button Short Press");
                return 1;
            }
            else {
                Serial.printf("Green Button Long Press %d", press_duration);
                return 2;
                //Serial.printf("Back to menu");
                //break;
            }
        }
        green_last_state = green_button_state;
    }
    // if(digitalRead(GREEN_BUTTON_PIN)==LOW) return 1;
    // else return 0;
    //return 0;
}
int red_button_on_press(){
    int red_last_state=HIGH;
    int pressed_time=0;
    int released_time=0;
    for(int i=0;i<2;i++){
        red_button_state=digitalRead(RED_BUTTON_PIN);
        if (red_last_state == HIGH && red_button_state == LOW)       // button is pressed
            pressed_time = millis();
        else if (red_last_state == LOW && red_button_state == HIGH) { // button is released
            released_time = millis();

            long press_duration = released_time - pressed_time;

            if ( press_duration < LONG_PRESS_TIME ) {
                Serial.println("Red Button Short Press");
                return 1;
            }
            else {
                Serial.printf("Red Button Long Press %d", press_duration);
                return 2;
                //Serial.printf("Back to menu");
                //break;
            }
        }
        red_last_state = red_button_state;
    }
    // if(digitalRead(RED_BUTTON_PIN)==LOW) return 1;
    // else return 0;
    //return 0;
}
int blue_button_on_press(){
    int blue_last_state=HIGH;
    int pressed_time=0;
    int released_time=0;
    for(int i=0;i<2;i++){
        blue_button_state=digitalRead(BLUE_BUTTON_PIN);
        if (blue_last_state == HIGH && blue_button_state == LOW)       // button is pressed
            pressed_time = millis();
        else if (blue_last_state == LOW && blue_button_state == HIGH) { // button is released
            released_time = millis();

            long press_duration = released_time - pressed_time;

            if ( press_duration < LONG_PRESS_TIME ) {
                Serial.println("Blue Button Short Press");
                return 1;
            }
            else {
                Serial.printf("Blue Button Long Press %d", press_duration);
                return 2;
                //Serial.printf("Back to menu");
                //break;
            }
        }
        blue_last_state = blue_button_state;
    }
    // if(digitalRead(BLUE_BUTTON_PIN)==LOW) return 1;
    // else return 0;
    //return 0;
}


/* LED */
#define GREEN_LED_PIN 16
#define RED_LED_PIN 17
// int green_led_state = LOW;
// int red_led_state = LOW;

/* RTC Clock */
RTC_DS1307 rtc;
//char namaHari[7][12] = {"Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"};

/* Speaker */
#define SPEAKER_PIN 2

/* DHT Input (Suhu-Humidity) */
const int DHT_PIN = 15;
DHTesp dhtSensor;

/* LDR Input (Kecerahan) */
#define LDR_PIN 13
const float GAMMA = 0.7;
const float RL10 = 50.0;
//Object

//Global Variable
typedef struct Alarm{
    int jam=0;
    int menit=0;
}Alarm;

Alarm alaram[5];
int alarm_count=0;
int alarm_slot=3;
//int alarm_count=0;

unsigned long long last_press;
unsigned long long current_time;
//Global Variable

//Game Var
int level=1;
//int finished_level=0;
int x_pos[21];
int y_pos[21];
int answer_set[21];
int mistakes=0;
//Game Var

//Animation
void anim(){
    int xx=39,yy=4,tt=30;
    const unsigned char PROGMEM frame0 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x40, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x87, 0xC0, 0x00, 0x00, 0x07, 0x0F, 0xE1, 0xFE, 0x1C, 0x00, 0x03, 0xEF, 0xF8, 0x7F, 0xDF, 0x00, 0x01, 0xFF, 0xFC, 0x0F, 0xFF, 0xE0, 0x00, 0x7F, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xE2, 0x01, 0x50, 0x28, 0xF8, 0x03, 0xF0, 0x01, 0xFE, 0x00, 0x3E, 0x00, 0xFE, 0x01, 0xFF, 0xE0, 0x1F, 0xC0, 0x1F, 0xC0, 0xFF, 0xFC, 0x0F, 0xE0, 0x03, 0xF0, 0x3F, 0xFF, 0x07, 0xF0, 0x00, 0x7E, 0x1F, 0x87, 0xE0, 0xF8, 0x00, 0x0F, 0x0F, 0xC0, 0xF8, 0x7C, 0x00, 0x03, 0xE1, 0xE0, 0x1F, 0x0F, 0x00, 0x00, 0xF0, 0xF8, 0x07, 0x87, 0xC0, 0x00, 0x3E, 0x3E, 0x01, 0xF0, 0xF0, 0x00, 0x0F, 0x07, 0x80, 0x78, 0x7C, 0x00, 0x03, 0xE3, 0xF0, 0x3F, 0x0F, 0x00, 0x01, 0xF8, 0x7E, 0x1F, 0x87, 0xE0, 0x00, 0xFC, 0x0F, 0xFF, 0xC0, 0xFC, 0x00, 0x7F, 0x01, 0xFF, 0xF0, 0x3F, 0x80, 0x1F, 0x80, 0x7F, 0xF8, 0x07, 0xE0, 0x0F, 0xC0, 0x07, 0xF8, 0x00, 0xFC, 0x01, 0xF1, 0x40, 0xA8, 0x0A, 0x3E, 0x00, 0x3F, 0xF8, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x7F, 0xFF, 0x03, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xE1, 0xFF, 0x7C, 0x00, 0x01, 0x87, 0xF8, 0x7F, 0x0E, 0x00, 0x00, 0x00, 0x3E, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x07, 0xCF, 0x80, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x30, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0xF7, 0xE0, 0x00, 0x00, 0x0F, 0xF7, 0xF8, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x3E, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x0F, 0x80, 0x00, 0x01, 0xFF, 0xFD, 0x03, 0xF8, 0x00, 0x00, 0xFC, 0xFC, 0x00, 0xFF, 0x00, 0x00, 0x1F, 0x84, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0xF8, 0x02, 0xD0, 0x3F, 0xF8, 0x00, 0x3F, 0x01, 0xFE, 0x07, 0xFE, 0x00, 0x0F, 0xC1, 0xFF, 0xE0, 0xFF, 0xC0, 0x01, 0xF0, 0xFF, 0xFC, 0x03, 0xF0, 0x00, 0xF8, 0x3F, 0xFF, 0x00, 0x7C, 0x00, 0x3E, 0x1F, 0x87, 0xE0, 0x1F, 0x00, 0x0F, 0x0F, 0xC0, 0xF8, 0x1F, 0xE0, 0x03, 0xE1, 0xE0, 0x1F, 0x0F, 0xF0, 0x01, 0xF0, 0xF8, 0x07, 0x83, 0xFC, 0x03, 0xFE, 0x3E, 0x01, 0xF1, 0xF8, 0x01, 0xFF, 0x07, 0x80, 0x78, 0x3C, 0x00, 0x3F, 0x03, 0xF0, 0x3F, 0x1F, 0x00, 0x1F, 0xC0, 0x7E, 0x1F, 0x87, 0xC0, 0x03, 0xE0, 0x0F, 0xFF, 0xC1, 0xF0, 0x00, 0xF8, 0x01, 0xFF, 0xF0, 0xF8, 0x00, 0x3F, 0xF0, 0x7F, 0xF8, 0x3F, 0x00, 0x07, 0xFE, 0x07, 0xF8, 0x0F, 0xC0, 0x01, 0xFF, 0xC0, 0x54, 0x01, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x0F, 0x7F, 0x00, 0x02, 0x0F, 0x80, 0x00, 0x0F, 0xF0, 0x03, 0xE7, 0xF0, 0x00, 0x01, 0xFC, 0x0B, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0x0F, 0xFF, 0xFC, 0x00, 0x00, 0x07, 0xC7, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0xF1, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x3E, 0xFF, 0x0F, 0x80, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0xC0, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x3F, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0xFF, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0xFF, 0xC7, 0xC0, 0x00, 0x01, 0xF9, 0xFF, 0xE1, 0xF0, 0x00, 0x00, 0x3E, 0x1D, 0x50, 0x7C, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x3F, 0x02, 0xD0, 0x3F, 0x00, 0x00, 0x0F, 0x81, 0xFE, 0x07, 0xE0, 0x00, 0x07, 0xC1, 0xFF, 0xE0, 0xFF, 0xC0, 0x01, 0xF0, 0xFF, 0xFC, 0x3F, 0xF0, 0x01, 0xF8, 0x3F, 0xFF, 0x07, 0xFC, 0x03, 0xFE, 0x1F, 0x87, 0xE0, 0xFF, 0x81, 0xFF, 0x0F, 0xC0, 0xF8, 0x07, 0xC0, 0x3F, 0xC1, 0xE0, 0x1F, 0x00, 0xF8, 0x1F, 0xE0, 0xF8, 0x07, 0x80, 0x3C, 0x03, 0xC0, 0x3E, 0x01, 0xF0, 0x5F, 0x81, 0xF0, 0x07, 0x80, 0x78, 0x3F, 0xC0, 0x3E, 0x03, 0xF0, 0x3F, 0x1F, 0xF8, 0x1F, 0xF0, 0x7E, 0x1F, 0x87, 0xFC, 0x03, 0xFE, 0x0F, 0xFF, 0xC1, 0xF4, 0x00, 0xFF, 0xC3, 0xFF, 0xF0, 0xFC, 0x00, 0x3F, 0xF0, 0x7F, 0xF8, 0x3E, 0x00, 0x00, 0x7E, 0x07, 0xF8, 0x1F, 0x00, 0x00, 0x0F, 0xC0, 0xA8, 0x07, 0xC0, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x03, 0xE0, 0xAB, 0x87, 0xC0, 0x00, 0x00, 0xF8, 0xFF, 0xF1, 0xF8, 0x00, 0x00, 0x3E, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0xE0, 0x3F, 0xC0, 0x00, 0x00, 0x1F, 0xF8, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0xFC, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x08, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x0F, 0x80, 0x00, 0x00, 0x1F, 0xFE, 0x03, 0xE0, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0xFB, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x7C, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x1F, 0x0F, 0xFF, 0x7F, 0x00, 0x00, 0x07, 0xC0, 0xAF, 0x8F, 0xC0, 0x00, 0x03, 0xF0, 0x01, 0x43, 0xE0, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x01, 0x7F, 0x02, 0xD0, 0x1F, 0x00, 0x03, 0xFF, 0x81, 0xFE, 0x07, 0xC0, 0x00, 0xFF, 0xC1, 0xFF, 0xE0, 0xF8, 0x00, 0x3F, 0xF0, 0xFF, 0xFC, 0x3E, 0x00, 0x0F, 0xF8, 0x3F, 0xFF, 0x07, 0xC0, 0x03, 0xC0, 0x1F, 0x87, 0xE1, 0xF8, 0x01, 0xF8, 0x0F, 0xC0, 0xF8, 0x7F, 0x40, 0x3C, 0x01, 0xE0, 0x1F, 0x0F, 0xF0, 0x1F, 0xC0, 0xF8, 0x07, 0x83, 0xFE, 0x07, 0xFC, 0x1E, 0x01, 0xF0, 0x3F, 0x81, 0xFF, 0x0F, 0x80, 0x78, 0x07, 0xC0, 0x1F, 0xE1, 0xF0, 0x3F, 0x00, 0xF8, 0x01, 0xF8, 0x7E, 0x1F, 0x80, 0x7C, 0x00, 0x3E, 0x0F, 0xFF, 0xC1, 0xFF, 0x00, 0x07, 0xC3, 0xFF, 0xF0, 0xFF, 0xC0, 0x01, 0xF0, 0x7F, 0xF8, 0x3F, 0xF0, 0x00, 0x3E, 0x07, 0xF8, 0x1F, 0xFC, 0x00, 0x0F, 0x80, 0x54, 0x0F, 0xD4, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x7C, 0x10, 0x01, 0xFC, 0x00, 0x00, 0x3F, 0x1F, 0x50, 0x3E, 0x00, 0x00, 0x0F, 0xEF, 0xFF, 0x0F, 0x80, 0x00, 0x03, 0xFF, 0xFF, 0xE3, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0xFD, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x7E, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x1E, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x01, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x1E, 0x3F, 0xC7, 0xC0, 0x00, 0x00, 0x1F, 0x87, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xE1, 0xFF, 0xFF, 0x00, 0x00, 0x87, 0xF8, 0x2F, 0xFF, 0xE0, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x16, 0x3F, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x07, 0xE0, 0x07, 0xFF, 0x01, 0x50, 0x03, 0xF0, 0x01, 0xFF, 0x81, 0xFE, 0x01, 0xFC, 0x00, 0xFC, 0x01, 0xFF, 0xE0, 0x7C, 0x00, 0x3E, 0x00, 0xFF, 0xFC, 0x3F, 0x00, 0x1F, 0xC0, 0x3F, 0xFF, 0x07, 0xC0, 0x03, 0xF8, 0x1F, 0x87, 0xE1, 0xF0, 0x00, 0xFF, 0x0F, 0xC0, 0xF8, 0x3C, 0x00, 0x0F, 0xE1, 0xE0, 0x1F, 0x1F, 0x00, 0x01, 0xF0, 0xF8, 0x07, 0x83, 0xC0, 0x00, 0x3E, 0x1E, 0x01, 0xF1, 0xF8, 0x00, 0x0F, 0x0F, 0x80, 0x78, 0x3F, 0x00, 0x03, 0xE1, 0xF0, 0x3F, 0x0F, 0xF0, 0x00, 0xF8, 0x7E, 0x1F, 0x81, 0xFE, 0x00, 0x3E, 0x0F, 0xFF, 0xC0, 0x3F, 0x00, 0x0F, 0xC3, 0xFF, 0xF0, 0x07, 0xC0, 0x03, 0xE0, 0x7F, 0xF8, 0x23, 0xF0, 0x03, 0xF8, 0x07, 0xF8, 0x0F, 0xF8, 0x00, 0xFC, 0x00, 0x54, 0x0F, 0xFE, 0x00, 0x3F, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xC7, 0x00, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x00, 0x3F, 0xFF, 0x41, 0xFE, 0x10, 0x00, 0x0F, 0xFF, 0xF8, 0x7E, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x1F, 0x80, 0x00, 0x00, 0x3E, 0x1F, 0xC7, 0x80, 0x00, 0x00, 0x0E, 0x07, 0xF5, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x9F, 0x00, 0x00, 0x00, 0x0A, 0x0F, 0xE3, 0xE0, 0x00, 0x00, 0x07, 0xDF, 0xF0, 0xFE, 0x00, 0x00, 0x03, 0xFF, 0xFC, 0x3F, 0x82, 0x00, 0x00, 0xFF, 0xFE, 0x07, 0xFF, 0xE0, 0x00, 0x7F, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0x8C, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xE0, 0x02, 0xD0, 0x3F, 0xF8, 0x01, 0xF8, 0x01, 0xFE, 0x00, 0x3E, 0x00, 0x3F, 0x01, 0xFF, 0xE0, 0x0F, 0xC0, 0x07, 0xE0, 0xFF, 0xFC, 0x03, 0xF0, 0x01, 0xF8, 0x3F, 0xFF, 0x01, 0xFC, 0x00, 0x3E, 0x1F, 0x87, 0xE0, 0xFE, 0x00, 0x0F, 0x0F, 0xC0, 0xF8, 0x7F, 0x00, 0x03, 0xE1, 0xE0, 0x1F, 0x0F, 0x80, 0x00, 0xF0, 0xF8, 0x07, 0x87, 0xC0, 0x00, 0x3E, 0x3E, 0x01, 0xF0, 0xF0, 0x00, 0x0F, 0x07, 0x80, 0x78, 0x7C, 0x00, 0x0F, 0xE3, 0xF0, 0x3F, 0x0F, 0x00, 0x07, 0xF0, 0x7E, 0x1F, 0x87, 0xC0, 0x03, 0xF8, 0x0F, 0xFF, 0xC1, 0xF0, 0x00, 0xFC, 0x01, 0xFF, 0xF0, 0x7F, 0x00, 0x3F, 0x00, 0x7F, 0xF8, 0x0F, 0xC0, 0x07, 0xC0, 0x07, 0xF8, 0x01, 0xF8, 0x01, 0xFF, 0x80, 0xA8, 0x00, 0x7E, 0x00, 0x3F, 0xF8, 0x00, 0x03, 0x1F, 0x80, 0x0F, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x7F, 0xFE, 0x07, 0xFF, 0xF0, 0x00, 0x04, 0x1F, 0xC3, 0xFF, 0xFC, 0x00, 0x00, 0x07, 0xF0, 0xFF, 0xBE, 0x00, 0x00, 0x00, 0x7C, 0x7F, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x9F, 0x80, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x50, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x1F, 0xEF, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0xFC, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x87, 0xC0, 0x00, 0x00, 0xFA, 0xFE, 0x81, 0xF8, 0x00, 0x00, 0x7E, 0x1C, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xFE, 0x80, 0x00, 0x7C, 0x02, 0xD0, 0x3F, 0xF8, 0x00, 0x1F, 0x81, 0xFE, 0x07, 0xFE, 0x00, 0x07, 0xC1, 0xFF, 0xE0, 0xFF, 0xC0, 0x01, 0xF0, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0xF8, 0x3F, 0xFF, 0x00, 0x7C, 0x00, 0x3E, 0x1F, 0x87, 0xE0, 0x0F, 0x00, 0x0F, 0x0F, 0xC0, 0xF8, 0x07, 0xC0, 0x1F, 0xE1, 0xE0, 0x1F, 0x07, 0xF8, 0x0F, 0xF0, 0xF8, 0x07, 0x83, 0xFE, 0x03, 0xFC, 0x3E, 0x01, 0xF0, 0xFF, 0x01, 0xFE, 0x07, 0x80, 0x78, 0x3F, 0x80, 0x7E, 0x03, 0xF0, 0x3F, 0x1F, 0x00, 0x0F, 0x00, 0x7E, 0x1F, 0x87, 0xC0, 0x03, 0xE0, 0x0F, 0xFF, 0xC1, 0xF0, 0x00, 0xFF, 0xC1, 0xFF, 0xF0, 0xF8, 0x00, 0x3F, 0xF0, 0x7F, 0xF8, 0x3E, 0x00, 0x07, 0xFE, 0x07, 0xF8, 0x1F, 0x80, 0x01, 0xFF, 0xC0, 0xA8, 0x03, 0xE0, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0xE0, 0x03, 0x87, 0xE0, 0x00, 0x01, 0xF8, 0x2B, 0xF5, 0xF8, 0x00, 0x00, 0x3E, 0x1F, 0xFF, 0xFC, 0x00, 0x00, 0x07, 0x8F, 0xFF, 0xFE, 0x00, 0x00, 0x03, 0xE3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x80, 0x00, 0x00, 0x3F, 0xFC, 0x03, 0xC0, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x60, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x00, 0x00, 0x00, 0x3C, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x7F, 0x80, 0x00, 0x00, 0x3F, 0xF0, 0x3F, 0xE0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x03, 0xFB, 0xFF, 0xF3, 0xF0, 0x00, 0x00, 0x7C, 0x7F, 0xF8, 0xF8, 0x00, 0x00, 0x1F, 0x05, 0x54, 0x3E, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x01, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x3F, 0x02, 0xD0, 0x3F, 0x00, 0x00, 0x0F, 0x81, 0xFE, 0x07, 0xC0, 0x00, 0x07, 0xC1, 0xFF, 0xE0, 0xFC, 0x00, 0x1F, 0xF0, 0xFF, 0xFC, 0x3F, 0xC0, 0x0F, 0xF8, 0x3F, 0xFF, 0x07, 0xFC, 0x03, 0xFE, 0x1F, 0x87, 0xE1, 0xFF, 0x81, 0xFF, 0x0F, 0xC0, 0xF8, 0x3F, 0xC0, 0x3E, 0x01, 0xE0, 0x1F, 0x01, 0xF8, 0x1F, 0x00, 0xF8, 0x07, 0x80, 0x3C, 0x03, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0xF8, 0x07, 0x80, 0x78, 0x07, 0xC0, 0x7F, 0xC3, 0xF0, 0x3F, 0x0F, 0xF8, 0x0F, 0xF8, 0x7E, 0x1F, 0x87, 0xFC, 0x03, 0xFE, 0x0F, 0xFF, 0xC1, 0xFF, 0x00, 0x7F, 0xC3, 0xFF, 0xF0, 0xFF, 0x80, 0x03, 0xF0, 0x7F, 0xF8, 0x3E, 0x00, 0x00, 0x3E, 0x07, 0xF8, 0x1F, 0x00, 0x00, 0x0F, 0xC0, 0xA8, 0x0F, 0xC0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x7E, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x07, 0xC2, 0xAA, 0x0F, 0x80, 0x00, 0x01, 0xF1, 0xFF, 0xE3, 0xE0, 0x00, 0x00, 0xFC, 0xFF, 0xFD, 0xFC, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xC0, 0xFF, 0xC0, 0x00, 0x00, 0x0F, 0xE0, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0xF0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x5F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x02, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xF0, 0x00, 0x00, 0x03, 0xFF, 0xFA, 0xFE, 0x00, 0x00, 0x00, 0xF9, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x3E, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0x87, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0xE0, 0x2F, 0xEF, 0xE0, 0x00, 0x03, 0xF8, 0x00, 0xE1, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x0D, 0xFE, 0x00, 0x00, 0x3F, 0x00, 0x07, 0xFF, 0x02, 0xD0, 0x0F, 0x80, 0x01, 0xFF, 0x81, 0xFE, 0x07, 0xC0, 0x00, 0xFF, 0xC1, 0xFF, 0xE0, 0xF8, 0x00, 0x3F, 0xE0, 0xFF, 0xFC, 0x3F, 0x00, 0x0F, 0xC0, 0x3F, 0xFF, 0x07, 0x80, 0x03, 0xC0, 0x1F, 0x87, 0xE1, 0xF0, 0x01, 0xF8, 0x0F, 0xC0, 0xF8, 0x3E, 0x00, 0x3F, 0x81, 0xE0, 0x1F, 0x1F, 0xC0, 0x1F, 0xF0, 0xF8, 0x07, 0x83, 0xFC, 0x03, 0xFE, 0x1E, 0x01, 0xF0, 0xFF, 0x00, 0x3F, 0x0F, 0x80, 0x78, 0x1F, 0xE0, 0x03, 0xE1, 0xF0, 0x3F, 0x01, 0xF8, 0x00, 0xF8, 0x7E, 0x1F, 0x80, 0x3C, 0x00, 0x3E, 0x0F, 0xFF, 0xC0, 0x1F, 0x00, 0x07, 0xC3, 0xFF, 0xF0, 0x7F, 0xC0, 0x01, 0xF0, 0x7F, 0xF8, 0x3F, 0xE0, 0x00, 0x7E, 0x07, 0xF8, 0x1F, 0xFC, 0x00, 0x1F, 0x00, 0x54, 0x0F, 0xFE, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF8, 0x70, 0x01, 0xFC, 0x00, 0x00, 0x7F, 0x7F, 0xA0, 0x7E, 0x00, 0x00, 0x0F, 0xFF, 0xFE, 0x1F, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xC7, 0xC0, 0x00, 0x00, 0x3F, 0xFF, 0xF1, 0xF0, 0x00, 0x00, 0x07, 0xF5, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x18, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0xC0, 0x80, 0x00, 0x00, 0x0F, 0xC3, 0xFD, 0xF8, 0x00, 0x01, 0x07, 0xF0, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xF8, 0x0F, 0xFF, 0xE0, 0x00, 0x7F, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x17, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x01, 0xC7, 0xC0, 0x07, 0xEF, 0x01, 0x50, 0x01, 0xF8, 0x01, 0xF0, 0x01, 0xFE, 0x00, 0x7E, 0x00, 0xFC, 0x01, 0xFF, 0xE0, 0x3F, 0x80, 0x3F, 0x00, 0xFF, 0xFC, 0x1F, 0x80, 0x0F, 0xE0, 0x3F, 0xFF, 0x07, 0xE0, 0x01, 0xFE, 0x1F, 0x87, 0xE1, 0xF0, 0x00, 0x1F, 0x0F, 0xC0, 0xF8, 0x7C, 0x00, 0x07, 0xE1, 0xE0, 0x1F, 0x0F, 0x00, 0x00, 0xF0, 0xF8, 0x07, 0x87, 0xC0, 0x00, 0x3C, 0x1E, 0x01, 0xF0, 0xF0, 0x00, 0x0F, 0x8F, 0x80, 0x78, 0x3C, 0x00, 0x03, 0xC1, 0xF0, 0x3F, 0x1F, 0xC0, 0x00, 0xF8, 0x7E, 0x1F, 0x83, 0xF8, 0x00, 0x7E, 0x0F, 0xFF, 0xC0, 0xFF, 0x00, 0x1F, 0x83, 0xFF, 0xF0, 0x0F, 0xC0, 0x0F, 0xC0, 0x7F, 0xF8, 0x03, 0xF0, 0x07, 0xF0, 0x07, 0xF8, 0x00, 0xF8, 0x01, 0xF8, 0x00, 0x54, 0x0F, 0x7E, 0x00, 0x3E, 0x18, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x00, 0x3F, 0xFF, 0x01, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0xFF, 0x04, 0x00, 0x01, 0xFB, 0xFC, 0x3F, 0x00, 0x00, 0x00, 0x30, 0x3F, 0x8F, 0x80, 0x00, 0x00, 0x00, 0x07, 0xE7, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x14, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x00, 0x18, 0x0F, 0xEF, 0x80, 0x00, 0x00, 0x0F, 0x8F, 0xF1, 0xF0, 0x00, 0x00, 0x07, 0xFF, 0xF8, 0x7E, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x1F, 0x80, 0x00, 0x00, 0xFF, 0xFE, 0x07, 0xF8, 0x40, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0x1C, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0x80, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xF0, 0x02, 0xD0, 0x3F, 0xF8, 0x00, 0xFC, 0x01, 0xFE, 0x07, 0xFE, 0x00, 0x0F, 0xC1, 0xFF, 0xE0, 0x0F, 0xC0, 0x03, 0xE0, 0xFF, 0xFC, 0x01, 0xF0, 0x00, 0xFC, 0x3F, 0xFF, 0x00, 0xFC, 0x00, 0x3E, 0x1F, 0x87, 0xE0, 0x7F, 0x80, 0x0F, 0x0F, 0xC0, 0xF8, 0x3F, 0xC0, 0x03, 0xE1, 0xE0, 0x1F, 0x0F, 0xC0, 0x00, 0xF0, 0xF8, 0x07, 0x83, 0xE0, 0x00, 0x7E, 0x3E, 0x01, 0xF1, 0xF0, 0x00, 0x3F, 0x07, 0x80, 0x7C, 0x3C, 0x00, 0x3F, 0xC3, 0xF0, 0x3E, 0x1F, 0x00, 0x1F, 0xE0, 0x7E, 0x1F, 0x87, 0xC0, 0x03, 0xF0, 0x0F, 0xFF, 0xC1, 0xF0, 0x00, 0xF8, 0x01, 0xFF, 0xF0, 0xFC, 0x00, 0x3F, 0x00, 0x7F, 0xF8, 0x1F, 0x00, 0x07, 0xFE, 0x07, 0xF8, 0x07, 0xF0, 0x01, 0xFF, 0xC0, 0x54, 0x00, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x1F, 0x00, 0x0F, 0xFF, 0x00, 0x03, 0x8F, 0xC0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x00, 0x21, 0xFE, 0x0B, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0x87, 0xFF, 0xFC, 0x00, 0x00, 0x03, 0xE3, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF8, 0x7F, 0x8F, 0x00, 0x00, 0x00, 0x1F, 0x7F, 0x03, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x40, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x1F, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x7E, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x8F, 0x80, 0x00, 0x03, 0xFF, 0xFF, 0xC3, 0xE0, 0x00, 0x00, 0xFC, 0x7E, 0xA0, 0xF8, 0x00, 0x00, 0x1F, 0x04, 0x00, 0x7F, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x3E, 0x02, 0xD0, 0x3F, 0x50, 0x00, 0x0F, 0x81, 0xFE, 0x07, 0xFE, 0x00, 0x07, 0xC1, 0xFF, 0xE0, 0xFF, 0xC0, 0x01, 0xF0, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0xF8, 0x3F, 0xFF, 0x07, 0xFC, 0x00, 0x7E, 0x1F, 0x87, 0xE0, 0x1F, 0x00, 0x7F, 0x0F, 0xC0, 0xF8, 0x03, 0xC0, 0x3F, 0xE1, 0xE0, 0x1F, 0x00, 0xF8, 0x1F, 0xF0, 0xF8, 0x07, 0x80, 0xFC, 0x03, 0xE0, 0x3E, 0x01, 0xF0, 0xFF, 0x81, 0xF8, 0x07, 0x80, 0x78, 0x3F, 0xE0, 0x3C, 0x03, 0xF0, 0x3F, 0x1F, 0xC0, 0x0F, 0x80, 0x7E, 0x1F, 0x87, 0xE0, 0x03, 0xFC, 0x0F, 0xFF, 0xC1, 0xF0, 0x00, 0xFF, 0xC3, 0xFF, 0xF0, 0xF8, 0x00, 0x3F, 0xF0, 0x7F, 0xF8, 0x3E, 0x00, 0x07, 0xFE, 0x07, 0xF8, 0x1F, 0x00, 0x00, 0xAF, 0xC0, 0xA8, 0x07, 0xC0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x0F, 0xE0, 0x01, 0x0F, 0x80, 0x00, 0x01, 0xF0, 0x57, 0xC3, 0xF0, 0x00, 0x00, 0x7C, 0x3F, 0xFD, 0xFC, 0x00, 0x00, 0x1F, 0x1F, 0xFF, 0xFE, 0x00, 0x00, 0x07, 0xEF, 0xFF, 0xFF, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0xF8, 0x0F, 0xC0, 0x00, 0x00, 0x1F, 0xFC, 0x03, 0xC0, 0x00, 0x00, 0x01, 0x7E, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x70, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x1F, 0xE0, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x3E, 0x1F, 0xFC, 0x7E, 0x00, 0x00, 0x0F, 0x85, 0x2E, 0x1F, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x00, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x3F, 0x02, 0xD0, 0x1F, 0x00, 0x00, 0x1F, 0x81, 0xFE, 0x07, 0xC0, 0x00, 0x7F, 0xC1, 0xFF, 0xE0, 0xF8, 0x00, 0x3F, 0xF0, 0xFF, 0xFC, 0x3F, 0x00, 0x1F, 0xF8, 0x3F, 0xFF, 0x07, 0xD0, 0x03, 0xFC, 0x1F, 0x87, 0xE1, 0xFF, 0x01, 0xFA, 0x0F, 0xC0, 0xF8, 0x3F, 0xC0, 0x3C, 0x01, 0xE0, 0x1F, 0x0F, 0xF8, 0x0F, 0x00, 0xF8, 0x07, 0x80, 0xFC, 0x07, 0xF0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0xFF, 0x07, 0x80, 0x78, 0x03, 0xC0, 0x7F, 0xC3, 0xF0, 0x3F, 0x02, 0xF8, 0x0F, 0xF8, 0x7E, 0x1F, 0x83, 0xFC, 0x00, 0x7E, 0x0F, 0xFF, 0xC1, 0xFF, 0x80, 0x0F, 0xC3, 0xFF, 0xF0, 0xFF, 0xC0, 0x01, 0xF0, 0x7F, 0xF8, 0x3F, 0xE0, 0x00, 0x3E, 0x07, 0xF8, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x54, 0x0F, 0xC0, 0x00, 0x01, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x0F, 0x87, 0x54, 0x1F, 0x00, 0x00, 0x07, 0xE3, 0xFF, 0xC7, 0xC0, 0x00, 0x01, 0xFF, 0xFF, 0xF1, 0xF0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x7F, 0x81, 0xFF, 0xC0, 0x00, 0x00, 0x0F, 0x80, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x20, 0x00, 0x00, 0x00, 0xFB, 0xFE, 0x3E, 0x00, 0x00, 0x00, 0x7C, 0x7F, 0xDF, 0xC0, 0x00, 0x00, 0x1F, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xC3, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0xF0, 0x2F, 0xFF, 0xE0, 0x00, 0x03, 0xF8, 0x00, 0xF9, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x08, 0x3E, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x0F, 0xC0, 0x07, 0xFF, 0x02, 0xD0, 0x07, 0xC0, 0x01, 0xFF, 0x81, 0xFE, 0x03, 0xF0, 0x00, 0xFF, 0xC1, 0xFF, 0xE0, 0xFC, 0x00, 0x3E, 0x00, 0xFF, 0xFC, 0x3E, 0x00, 0x0F, 0x80, 0x3F, 0xFF, 0x07, 0xC0, 0x07, 0xE0, 0x1F, 0x87, 0xE1, 0xF0, 0x00, 0xFE, 0x0F, 0xC0, 0xF8, 0x7C, 0x00, 0x7F, 0xC1, 0xE0, 0x1F, 0x0F, 0x00, 0x07, 0xF0, 0xF8, 0x07, 0x87, 0xE0, 0x00, 0x7E, 0x3E, 0x01, 0xF0, 0xFF, 0x00, 0x0F, 0x07, 0x80, 0x78, 0x3F, 0xC0, 0x03, 0xE3, 0xF0, 0x3F, 0x07, 0xF8, 0x00, 0xF8, 0x7E, 0x1F, 0x80, 0x7C, 0x00, 0x1E, 0x0F, 0xFF, 0xC0, 0x1F, 0x00, 0x0F, 0xC3, 0xFF, 0xF0, 0x07, 0xC0, 0x01, 0xF0, 0x7F, 0xF8, 0x3F, 0xF0, 0x00, 0xFC, 0x07, 0xF8, 0x1F, 0xF8, 0x00, 0x7E, 0x00, 0x54, 0x0F, 0xFE, 0x00, 0x1F, 0x80, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xC1, 0x00, 0x03, 0xFD, 0xC0, 0x03, 0xF9, 0xF0, 0x01, 0xFC, 0x00, 0x00, 0x7F, 0xFF, 0xA0, 0xFE, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x3F, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x8F, 0x80, 0x00, 0x00, 0x3F, 0xDF, 0xE3, 0xE0, 0x00, 0x00, 0x07, 0xC7, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0xC0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


    
    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame0,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame1,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame2,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame3,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame4,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame5,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame6,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame7,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame8,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame9,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame10,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame11,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame12,50,50, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame13,50,50, 1);
    oled.display();
    delay(tt);
}

void gear(){
    int xx=48,yy=15,tt=30;
    const unsigned char PROGMEM frame0 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x1C, 0x38, 0xC0, 0x07, 0xF8, 0x1F, 0xE0, 0x07, 0xF0, 0x0F, 0xE0, 0x0E, 0x00, 0x00, 0x70, 0x1C, 0x03, 0xC0, 0x38, 0x0E, 0x0F, 0xF0, 0x70, 0x07, 0x0C, 0x70, 0xE0, 0x03, 0x1C, 0x38, 0xC0, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x1C, 0x18, 0xC0, 0x07, 0x0E, 0x70, 0xE0, 0x0E, 0x0F, 0xF0, 0x70, 0x1C, 0x03, 0xC0, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x07, 0xF0, 0x0F, 0xE0, 0x07, 0xFC, 0x3F, 0xE0, 0x03, 0x1C, 0x38, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x81, 0x9C, 0x00, 0x01, 0xE7, 0x8C, 0x00, 0x03, 0xFF, 0x1C, 0x00, 0x07, 0x3C, 0x0C, 0x00, 0x06, 0x00, 0x0F, 0x20, 0x07, 0x00, 0x03, 0xF0, 0x03, 0x83, 0xC1, 0xF0, 0x01, 0x8F, 0xF0, 0x38, 0x03, 0x8C, 0x70, 0x18, 0x03, 0x1C, 0x38, 0x78, 0x03, 0x18, 0x18, 0xF0, 0x0F, 0x18, 0x18, 0xC0, 0x1E, 0x1C, 0x18, 0xC0, 0x18, 0x0E, 0x70, 0xC0, 0x1C, 0x0F, 0xF1, 0x80, 0x0F, 0xC3, 0xC1, 0xC0, 0x0F, 0xC0, 0x00, 0xE0, 0x04, 0xE0, 0x00, 0xE0, 0x00, 0x38, 0x3C, 0xE0, 0x00, 0x30, 0xFF, 0xC0, 0x00, 0x39, 0xE7, 0x80, 0x00, 0x39, 0x81, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x30, 0x3C, 0x00, 0x00, 0xF8, 0x7F, 0x00, 0x01, 0xFF, 0xE7, 0x00, 0x01, 0x8F, 0xC3, 0x00, 0x01, 0x84, 0x06, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x01, 0x83, 0xC3, 0x80, 0x01, 0x8F, 0xF1, 0xF8, 0x07, 0x8C, 0x70, 0xF8, 0x1F, 0x1C, 0x38, 0x18, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x38, 0x18, 0x1C, 0x18, 0xF8, 0x1F, 0x0E, 0x70, 0xE0, 0x1F, 0x8F, 0xF1, 0x80, 0x01, 0xC3, 0xC3, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x00, 0x60, 0x21, 0x80, 0x00, 0xC3, 0xF1, 0x80, 0x00, 0xE7, 0xFF, 0x80, 0x00, 0xFE, 0x1F, 0x00, 0x00, 0x3C, 0x0C, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x7E, 0x06, 0x00, 0x00, 0x7F, 0x0F, 0x00, 0x00, 0x63, 0xFF, 0x80, 0x00, 0x63, 0xF9, 0xC0, 0x00, 0x60, 0x11, 0xC0, 0x00, 0xE0, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x80, 0x0F, 0xC3, 0xC1, 0x80, 0x1F, 0x8F, 0xF1, 0x80, 0x1C, 0x0C, 0x71, 0xC0, 0x18, 0x1C, 0x38, 0xF0, 0x18, 0x18, 0x18, 0xF8, 0x1F, 0x18, 0x18, 0x18, 0x0F, 0x1C, 0x18, 0x18, 0x03, 0x8E, 0x70, 0x38, 0x01, 0x8F, 0xF1, 0xF8, 0x01, 0x83, 0xC3, 0xF0, 0x01, 0xC0, 0x03, 0x00, 0x01, 0x80, 0x07, 0x00, 0x03, 0x88, 0x06, 0x00, 0x03, 0x9F, 0xC6, 0x00, 0x01, 0xFF, 0xC6, 0x00, 0x00, 0xF0, 0xFE, 0x00, 0x00, 0x20, 0x7C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x1C, 0xC0, 0x00, 0x00, 0x18, 0xE1, 0x80, 0x00, 0x18, 0xFF, 0xC0, 0x00, 0x78, 0x3F, 0xE0, 0x07, 0xF0, 0x04, 0x60, 0x0F, 0xC0, 0x00, 0x70, 0x0C, 0x03, 0xC0, 0xE0, 0x1C, 0x0F, 0xF1, 0xC0, 0x1C, 0x0C, 0x71, 0xC0, 0x0F, 0x1C, 0x38, 0xC0, 0x07, 0x18, 0x18, 0xC0, 0x03, 0x18, 0x18, 0xE0, 0x03, 0x1C, 0x18, 0xF0, 0x03, 0x0E, 0x70, 0x38, 0x03, 0x8F, 0xF0, 0x38, 0x07, 0x03, 0xC0, 0x30, 0x0E, 0x00, 0x03, 0xF0, 0x0E, 0x10, 0x0F, 0xF0, 0x07, 0xFC, 0x1E, 0x00, 0x03, 0xFF, 0x18, 0x00, 0x01, 0x87, 0x18, 0x00, 0x00, 0x03, 0x38, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x07, 0x30, 0x00, 0x00, 0x06, 0x30, 0x00, 0x03, 0xDE, 0x38, 0x00, 0x07, 0xFC, 0x1E, 0xE0, 0x06, 0x60, 0x0F, 0xE0, 0x0E, 0x00, 0x03, 0x70, 0x0E, 0x03, 0xC0, 0x30, 0x07, 0x0F, 0xF0, 0x38, 0x03, 0x8C, 0x70, 0x70, 0x03, 0x1C, 0x38, 0xE0, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x18, 0x18, 0xC0, 0x07, 0x1C, 0x18, 0xC0, 0x0E, 0x0E, 0x71, 0xC0, 0x1C, 0x0F, 0xF0, 0xE0, 0x0C, 0x03, 0xC0, 0x70, 0x0E, 0xC0, 0x00, 0x70, 0x07, 0xF0, 0x0E, 0x60, 0x07, 0x78, 0x3F, 0xE0, 0x00, 0x1C, 0x7B, 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xE0, 0xDE, 0x00, 0x01, 0xF7, 0x8C, 0x00, 0x03, 0xBF, 0x8C, 0x00, 0x07, 0x1C, 0x0C, 0x00, 0x03, 0x00, 0x0F, 0x00, 0x03, 0x80, 0x03, 0xF0, 0x01, 0x83, 0xC1, 0xF0, 0x01, 0x8F, 0xF1, 0x78, 0x03, 0x8C, 0x70, 0x18, 0x03, 0x1C, 0x38, 0x18, 0x0F, 0x18, 0x18, 0x78, 0x1E, 0x18, 0x18, 0xF0, 0x18, 0x1C, 0x18, 0xC0, 0x18, 0x0E, 0x71, 0xC0, 0x1D, 0x0F, 0xF1, 0x80, 0x0F, 0xC3, 0xC1, 0x80, 0x0F, 0xC0, 0x01, 0xC0, 0x00, 0x60, 0x00, 0xC0, 0x00, 0x70, 0x38, 0xE0, 0x00, 0x31, 0xFD, 0xC0, 0x00, 0x33, 0xEF, 0x80, 0x00, 0x7B, 0x07, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0xFC, 0x3F, 0x00, 0x01, 0xEF, 0xF7, 0x80, 0x01, 0xC7, 0xE3, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x01, 0x83, 0xC1, 0x80, 0x03, 0x8F, 0xF1, 0xC0, 0x1F, 0x8C, 0x71, 0xF8, 0x1E, 0x1C, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x1C, 0x18, 0xB8, 0x1F, 0x0E, 0x70, 0xF8, 0x03, 0x8F, 0xF1, 0xC0, 0x01, 0xC3, 0xC3, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x01, 0xC7, 0xE3, 0x80, 0x01, 0xEF, 0xF7, 0x80, 0x00, 0xFC, 0x3F, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x7B, 0x07, 0x00, 0x00, 0x31, 0xEF, 0x80, 0x00, 0x31, 0xFD, 0xC0, 0x00, 0x70, 0x18, 0xE0, 0x00, 0x70, 0x00, 0xC0, 0x0F, 0xC0, 0x01, 0xC0, 0x0F, 0xC3, 0xC1, 0x80, 0x1D, 0x0F, 0xF1, 0x80, 0x18, 0x0E, 0x31, 0xC0, 0x18, 0x18, 0x38, 0xC0, 0x1E, 0x18, 0x18, 0xF0, 0x0F, 0x18, 0x18, 0x78, 0x03, 0x1C, 0x18, 0x18, 0x03, 0x8E, 0x70, 0x18, 0x01, 0x8F, 0xF0, 0xB8, 0x01, 0x83, 0xC3, 0xF0, 0x03, 0x80, 0x03, 0xF0, 0x03, 0x00, 0x0E, 0x00, 0x07, 0x1C, 0x0E, 0x00, 0x03, 0xBF, 0x8C, 0x00, 0x01, 0xF7, 0xCC, 0x00, 0x00, 0xE0, 0xDE, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x00, 0x0C, 0x60, 0x80, 0x00, 0x1C, 0x7B, 0xC0, 0x07, 0x78, 0x1F, 0xE0, 0x07, 0xF0, 0x06, 0x60, 0x0E, 0xC0, 0x00, 0x70, 0x0C, 0x03, 0xC0, 0x70, 0x1C, 0x0F, 0xF0, 0xE0, 0x0E, 0x0C, 0x71, 0xC0, 0x07, 0x1C, 0x38, 0xC0, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x1C, 0x18, 0xE0, 0x03, 0x8E, 0x70, 0x70, 0x07, 0x0F, 0xF0, 0x38, 0x0E, 0x03, 0xC0, 0x30, 0x0E, 0x00, 0x03, 0x70, 0x06, 0x60, 0x0F, 0xE0, 0x07, 0xFC, 0x1E, 0xE0, 0x03, 0xDE, 0x38, 0x00, 0x01, 0x06, 0x30, 0x00, 0x00, 0x07, 0x30, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x03, 0x38, 0x00, 0x01, 0x87, 0x18, 0x00, 0x03, 0xFF, 0x18, 0x00, 0x07, 0xFC, 0x1E, 0x00, 0x06, 0x20, 0x0F, 0xF0, 0x0E, 0x00, 0x03, 0xF0, 0x07, 0x03, 0xC0, 0x30, 0x03, 0x8F, 0xF0, 0x38, 0x03, 0x8C, 0x70, 0x38, 0x03, 0x1C, 0x38, 0xF0, 0x03, 0x18, 0x18, 0xE0, 0x07, 0x18, 0x18, 0xC0, 0x0F, 0x1C, 0x18, 0xC0, 0x1C, 0x0E, 0x70, 0xC0, 0x1C, 0x0F, 0xF1, 0xC0, 0x0C, 0x03, 0xC0, 0xE0, 0x0F, 0xC0, 0x00, 0x70, 0x0F, 0xF0, 0x04, 0x60, 0x00, 0x78, 0x3F, 0xE0, 0x00, 0x18, 0xFF, 0xC0, 0x00, 0x18, 0xE1, 0x80, 0x00, 0x1C, 0xC0, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x20, 0x7E, 0x00, 0x00, 0xF0, 0xFE, 0x00, 0x01, 0xFF, 0xC6, 0x00, 0x03, 0x9F, 0xC6, 0x00, 0x03, 0x8C, 0x06, 0x00, 0x01, 0x80, 0x07, 0x00, 0x01, 0xC0, 0x03, 0x00, 0x01, 0x83, 0xC1, 0xF0, 0x01, 0x8F, 0xF1, 0xF8, 0x03, 0x8C, 0x70, 0x38, 0x0F, 0x1C, 0x38, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x1C, 0x18, 0xF0, 0x1C, 0x0E, 0x70, 0xC0, 0x1F, 0x8F, 0xF1, 0x80, 0x0F, 0xC3, 0xC3, 0x80, 0x00, 0xC0, 0x01, 0x80, 0x00, 0xE0, 0x01, 0x80, 0x00, 0x60, 0x31, 0xC0, 0x00, 0x63, 0xF9, 0xC0, 0x00, 0x63, 0xFF, 0x80, 0x00, 0x7F, 0x0F, 0x00, 0x00, 0x3E, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3C, 0x0C, 0x00, 0x00, 0xFE, 0x1F, 0x00, 0x00, 0xE7, 0xFF, 0x80, 0x00, 0xC3, 0xF1, 0x80, 0x00, 0x60, 0x01, 0x80, 0x00, 0xE0, 0x03, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x01, 0xC3, 0xC1, 0x80, 0x1F, 0x8F, 0xF1, 0x80, 0x1F, 0x0C, 0x71, 0xE0, 0x18, 0x1C, 0x38, 0xF8, 0x18, 0x18, 0x18, 0x38, 0x1C, 0x18, 0x18, 0x18, 0x1F, 0x1C, 0x18, 0x18, 0x07, 0x8E, 0x70, 0xF8, 0x01, 0x8F, 0xF1, 0xF8, 0x01, 0x83, 0xC3, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x01, 0x84, 0x06, 0x00, 0x03, 0x8F, 0xC3, 0x00, 0x01, 0xFF, 0xE7, 0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x30, 0x3C, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x39, 0x81, 0x00, 0x00, 0x31, 0xE7, 0x80, 0x00, 0x38, 0xFF, 0xC0, 0x00, 0x70, 0x1C, 0xE0, 0x04, 0xF0, 0x00, 0x60, 0x0F, 0xC0, 0x00, 0xE0, 0x0F, 0x83, 0xC1, 0xC0, 0x1C, 0x0F, 0xF1, 0x80, 0x18, 0x0E, 0x31, 0xC0, 0x1E, 0x18, 0x38, 0xC0, 0x0F, 0x18, 0x18, 0xC0, 0x03, 0x18, 0x18, 0xF0, 0x03, 0x1C, 0x18, 0x38, 0x03, 0x0E, 0x70, 0x18, 0x01, 0x8F, 0xF0, 0x38, 0x03, 0x83, 0xC3, 0xF0, 0x07, 0x00, 0x03, 0xF0, 0x06, 0x00, 0x0F, 0x20, 0x07, 0x3C, 0x1C, 0x00, 0x03, 0xFF, 0x0C, 0x00, 0x01, 0xE7, 0x9C, 0x00, 0x00, 0x81, 0x9C, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    
    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame0,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame1,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame2,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame3,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame4,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame5,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame6,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame7,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame8,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame9,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame10,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame11,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame12,32,32, 1);
    oled.display();
    delay(tt);

    oled.clearDisplay();
    oled.drawBitmap(xx, yy,frame13,32,32, 1);
    oled.display();
    delay(tt);

}

void temperature(){
    int xx=86, yy=10, tt=30;
    const unsigned char PROGMEM frame0 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1E, 0xF8, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1E, 0xF8, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x1D, 0x70, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x1C, 0x3C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x34, 0x00, 0x00, 0x08, 0x38, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x38, 0x0C, 0x00, 0x00, 0x0F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0E, 0xFC, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x3E, 0xFC, 0x00, 0x00, 0x37, 0xCC, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0D, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0x04, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x0C, 0x3E, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x1C, 0x38, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x62, 0x8C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x30, 0x1C, 0x00, 0x00, 0x1E, 0xF0, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0x04, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x0C, 0x3E, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x18, 0x38, 0x00, 0x00, 0x38, 0x18, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x30, 0x1C, 0x00, 0x00, 0x1E, 0xF0, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x70, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0E, 0xFC, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x07, 0xE0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x1E, 0xF8, 0x00, 0x00, 0x07, 0xE0, 0x00};

    const uint8_t *frames[] = {
        frame0, frame1, frame2, frame3, frame4, frame5, frame6, frame7,
        frame8, frame9, frame10, frame11, frame12, frame13
    };

    for (int i = 0; i < 14; i++) {
        oled.drawBitmap(xx, yy, frames[i], 32, 32, 1); //draw the image
        oled.display();
        delay(tt); //delay
    }

}

void bulb(){
    int xx=80, yy=16, tt=30;

    const unsigned char PROGMEM frame0 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x01, 0x8F, 0xF9, 0x80, 0x00, 0x1C, 0x1E, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x40, 0x01, 0x80, 0x00, 0xC0, 0x01, 0x80, 0x00, 0xC0, 0x00, 0x80, 0x00, 0x80, 0x00, 0xC0, 0x0C, 0x80, 0x00, 0xF0, 0x01, 0x80, 0x00, 0xC0, 0x00, 0x80, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0x80, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x60, 0x03, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0xB0, 0x07, 0x00, 0x00, 0x98, 0x0D, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0xC0, 0xC0, 0x01, 0x8F, 0xF9, 0x80, 0x00, 0x3C, 0x1C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x00, 0xC0, 0x1D, 0x80, 0x00, 0xB8, 0x09, 0x80, 0x00, 0xC8, 0x01, 0x80, 0x00, 0x80, 0x00, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x60, 0x03, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0xB0, 0x06, 0x00, 0x01, 0x98, 0x1D, 0x80, 0x01, 0x0C, 0x18, 0xC0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xB0, 0x00, 0x00, 0x0F, 0xB0, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x07, 0x80, 0xC0, 0x01, 0x9F, 0xF1, 0x80, 0x00, 0x70, 0x38, 0x00, 0x00, 0xE0, 0x1C, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x01, 0x80, 0x06, 0x00, 0x01, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x3F, 0x00, 0x01, 0x3C, 0x13, 0x00, 0x01, 0x14, 0x03, 0x00, 0x03, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x80, 0x06, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0xC0, 0x0C, 0x00, 0x00, 0xE0, 0x19, 0x00, 0x01, 0xB0, 0x19, 0x80, 0x03, 0x18, 0x30, 0xC0, 0x02, 0x1F, 0xF0, 0x40, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0D, 0xF0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x03, 0x80, 0xC0, 0x01, 0x9F, 0xF1, 0x80, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0C, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x01, 0x80, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x80, 0x01, 0x80, 0x3D, 0x00, 0x01, 0xBC, 0x11, 0x00, 0x01, 0x90, 0x01, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x01, 0x80, 0x03, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xB0, 0x0D, 0x00, 0x01, 0x98, 0x19, 0x80, 0x03, 0x18, 0x10, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xD0, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x03, 0x80, 0xC0, 0x01, 0x9F, 0xF1, 0x80, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x3D, 0x80, 0x01, 0xBC, 0x11, 0x00, 0x00, 0x90, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xB0, 0x0D, 0x00, 0x01, 0x98, 0x19, 0x80, 0x03, 0x18, 0x18, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x03, 0x80, 0xC0, 0x01, 0x9F, 0xF1, 0x80, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x3D, 0x80, 0x01, 0xBC, 0x11, 0x00, 0x00, 0x90, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xB0, 0x0D, 0x00, 0x01, 0x98, 0x19, 0x80, 0x03, 0x18, 0x18, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x03, 0x80, 0xC0, 0x01, 0x9F, 0xF1, 0x80, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x3D, 0x80, 0x01, 0xBC, 0x11, 0x00, 0x00, 0x90, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xB0, 0x0D, 0x00, 0x01, 0x98, 0x19, 0x80, 0x03, 0x18, 0x18, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x03, 0xC0, 0xC0, 0x01, 0x8F, 0xF9, 0x80, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x3D, 0x80, 0x00, 0xBC, 0x11, 0x80, 0x00, 0x90, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x01, 0x98, 0x19, 0x80, 0x03, 0x0C, 0x18, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x40, 0x03, 0x01, 0xE0, 0xC0, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x1C, 0x0E, 0x00, 0x00, 0x38, 0x07, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x01, 0x80, 0x00, 0xC0, 0x00, 0x80, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x30, 0x80, 0x00, 0xCC, 0x10, 0x80, 0x00, 0xC4, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0x80, 0x00, 0x40, 0x01, 0x80, 0x00, 0x60, 0x01, 0x80, 0x00, 0x30, 0x07, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x03, 0x0C, 0x18, 0xC0, 0x02, 0x0F, 0xF0, 0x40, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x38, 0x3C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x80, 0x01, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x01, 0x80, 0x03, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x40, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x78, 0x38, 0x00, 0x00, 0x60, 0x1C, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x01, 0x80, 0x02, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x00, 0x03, 0x00, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0D, 0x70, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};



    const uint8_t *frames[] = {
        frame0, frame1, frame2, frame3, frame4, frame5, frame6, frame7,
        frame8, frame9, frame10, frame11, frame12, frame13
    };

    for (int i = 0; i < 14; i++) {
        oled.drawBitmap(xx, yy, frames[i], 32, 32, 1); //draw the image
        oled.display();
        delay(tt); //delay
    }
}

void alarm(){
    int xx=48, yy=16, tt=30;
    const unsigned char PROGMEM frame0 [] = {0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xE0, 0x1D, 0xC0, 0x07, 0x78, 0x31, 0x85, 0xA1, 0x8C, 0x33, 0x3F, 0xFC, 0xCC, 0x26, 0x70, 0x0E, 0xE4, 0x6D, 0xC0, 0x03, 0x76, 0x7F, 0x80, 0x01, 0xDE, 0x7B, 0x00, 0x00, 0xDE, 0x36, 0x00, 0x00, 0x6E, 0x2C, 0x40, 0x00, 0x34, 0x0C, 0x60, 0x00, 0x10, 0x18, 0x30, 0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x10, 0x0C, 0x00, 0x08, 0x10, 0x06, 0x00, 0x08, 0x30, 0x3F, 0x80, 0x0C, 0x10, 0x1F, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0xF0, 0x0E, 0x70, 0x1C, 0x3F, 0xFC, 0x18, 0x10, 0x03, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xE0, 0x1D, 0xC0, 0x07, 0x78, 0x31, 0x85, 0xA1, 0x8C, 0x33, 0x9F, 0xF9, 0xCC, 0x26, 0x70, 0x0E, 0x64, 0x6D, 0xC0, 0x03, 0xB6, 0x7F, 0x80, 0x01, 0xDE, 0x7B, 0x00, 0x00, 0xDE, 0x36, 0x30, 0x00, 0x6E, 0x2C, 0x10, 0x00, 0x34, 0x08, 0x18, 0x00, 0x10, 0x18, 0x0C, 0x00, 0x18, 0x18, 0x04, 0x00, 0x18, 0x10, 0x06, 0x00, 0x08, 0x10, 0x03, 0x00, 0x08, 0x30, 0x3F, 0x80, 0x0C, 0x10, 0x1F, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0xF0, 0x0E, 0x70, 0x0C, 0x3F, 0xFC, 0x18, 0x10, 0x03, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xE0, 0x1D, 0xC0, 0x07, 0x78, 0x31, 0x85, 0xA1, 0x8C, 0x33, 0x3F, 0xFC, 0xCC, 0x26, 0x70, 0x0E, 0xE4, 0x6D, 0xC0, 0x03, 0x76, 0x7F, 0x80, 0x01, 0xDE, 0x7B, 0x08, 0x00, 0xDE, 0x36, 0x0C, 0x00, 0x6E, 0x2C, 0x0C, 0x00, 0x34, 0x0C, 0x06, 0x00, 0x10, 0x18, 0x06, 0x00, 0x18, 0x18, 0x02, 0x00, 0x18, 0x10, 0x03, 0x00, 0x08, 0x10, 0x01, 0x00, 0x08, 0x30, 0x3F, 0x80, 0x0C, 0x10, 0x1F, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0xF0, 0x0E, 0x70, 0x1C, 0x3F, 0xFC, 0x18, 0x10, 0x03, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x03, 0x00, 0x0E, 0xF0, 0x1F, 0x80, 0x07, 0x18, 0x3B, 0x03, 0xE3, 0x98, 0x63, 0x3F, 0xFC, 0xCC, 0x66, 0xF0, 0x0F, 0x6C, 0xCD, 0xC0, 0x03, 0xBC, 0x5B, 0x80, 0x01, 0xDC, 0xFB, 0x06, 0x00, 0x6C, 0xF6, 0x02, 0x00, 0x60, 0x6C, 0x02, 0x00, 0x30, 0x48, 0x03, 0x00, 0x10, 0x18, 0x03, 0x00, 0x18, 0x18, 0x03, 0x00, 0x18, 0x10, 0x01, 0x00, 0x08, 0x30, 0x01, 0x00, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x15, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0x78, 0x1E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x02, 0x80, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x7D, 0x7C, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0x80, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x00, 0x6E, 0x2C, 0x01, 0x00, 0x34, 0x0C, 0x01, 0x00, 0x30, 0x08, 0x01, 0x00, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x00, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x3D, 0x7E, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0xC0, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x80, 0x6E, 0x2C, 0x01, 0x80, 0x34, 0x0C, 0x01, 0x80, 0x30, 0x08, 0x01, 0x80, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x80, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x3D, 0x7E, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0xC0, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x80, 0x6E, 0x2C, 0x01, 0x80, 0x34, 0x0C, 0x01, 0x80, 0x30, 0x08, 0x01, 0x80, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x80, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x3D, 0x7E, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0xC0, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x80, 0x6E, 0x2C, 0x01, 0x80, 0x34, 0x0C, 0x01, 0x80, 0x30, 0x08, 0x01, 0x80, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x80, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x3D, 0x7E, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0xC0, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x80, 0x6E, 0x2C, 0x01, 0x80, 0x34, 0x0C, 0x01, 0x80, 0x30, 0x08, 0x01, 0x80, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x80, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x3D, 0x7E, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0xC0, 0x01, 0xB6, 0x7B, 0x01, 0x01, 0xDE, 0x76, 0x01, 0x80, 0x6E, 0x2C, 0x01, 0x80, 0x34, 0x0C, 0x01, 0x80, 0x30, 0x08, 0x01, 0x80, 0x10, 0x18, 0x01, 0x80, 0x18, 0x18, 0x01, 0x80, 0x18, 0x10, 0x01, 0x80, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x07, 0xF0, 0x1C, 0xC0, 0x03, 0x38, 0x31, 0x8F, 0xF1, 0x8C, 0x23, 0x7D, 0x7C, 0xC4, 0x66, 0xE0, 0x07, 0x66, 0x6D, 0x80, 0x01, 0xB6, 0x7B, 0x00, 0x01, 0xDE, 0x76, 0x00, 0x10, 0x6E, 0x2C, 0x00, 0x30, 0x34, 0x0C, 0x00, 0x30, 0x30, 0x08, 0x00, 0x60, 0x10, 0x18, 0x00, 0x60, 0x18, 0x18, 0x00, 0x40, 0x18, 0x10, 0x00, 0xC0, 0x0C, 0x30, 0x01, 0x80, 0x08, 0x10, 0x3F, 0x80, 0x0C, 0x30, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x0C, 0x00, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x06, 0xE0, 0x07, 0x60, 0x0C, 0x78, 0x3E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x03, 0xE0, 0x00, 0x00, 0x0F, 0x70, 0x00, 0xA0, 0x18, 0xE0, 0x01, 0xF8, 0x19, 0xC7, 0xC1, 0xDC, 0x33, 0x3F, 0xFC, 0xC6, 0x36, 0xF0, 0x0F, 0x66, 0x3D, 0xC0, 0x03, 0xB2, 0x3B, 0x00, 0x00, 0xDB, 0x37, 0x00, 0x00, 0xFB, 0x06, 0x00, 0x00, 0x6F, 0x0C, 0x00, 0x00, 0x36, 0x08, 0x00, 0x00, 0x12, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x07, 0xC8, 0x30, 0x3F, 0xFC, 0x0C, 0x10, 0x15, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0C, 0x10, 0x00, 0x00, 0x08, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x60, 0x07, 0x00, 0x00, 0x60, 0x03, 0x80, 0x01, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0x78, 0x0E, 0x30, 0x18, 0x1F, 0xF8, 0x18, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xE0, 0x1D, 0xC0, 0x07, 0x78, 0x31, 0x85, 0xA1, 0x8C, 0x33, 0x3F, 0xFC, 0xCC, 0x26, 0x70, 0x0E, 0xE4, 0x6D, 0xC0, 0x03, 0x76, 0x7F, 0x80, 0x01, 0xDE, 0x7B, 0x00, 0x00, 0xDE, 0x36, 0x00, 0x00, 0x6E, 0x2C, 0x00, 0x00, 0x34, 0x0C, 0x00, 0x00, 0x10, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x30, 0x3F, 0x80, 0x0C, 0x10, 0x1F, 0x80, 0x08, 0x30, 0x00, 0xC0, 0x0C, 0x10, 0x00, 0xC0, 0x08, 0x18, 0x00, 0x60, 0x18, 0x18, 0x00, 0x20, 0x18, 0x08, 0x00, 0x30, 0x10, 0x0C, 0x00, 0x30, 0x30, 0x06, 0x00, 0x18, 0x60, 0x06, 0x00, 0x08, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0xF0, 0x0E, 0x70, 0x1C, 0x3F, 0xFC, 0x18, 0x10, 0x03, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xE0, 0x1D, 0xC0, 0x07, 0x78, 0x31, 0x85, 0xA1, 0x8C, 0x33, 0x3F, 0xFC, 0xCC, 0x26, 0x70, 0x0E, 0xE4, 0x6D, 0xC0, 0x03, 0x76, 0x7F, 0x80, 0x01, 0xDE, 0x7B, 0x00, 0x00, 0xDE, 0x36, 0x00, 0x00, 0x6E, 0x2C, 0x00, 0x00, 0x34, 0x08, 0x00, 0x00, 0x10, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x30, 0x3F, 0x00, 0x0C, 0x10, 0x1F, 0x80, 0x08, 0x30, 0x0E, 0x00, 0x0C, 0x10, 0x1C, 0x00, 0x08, 0x18, 0x30, 0x00, 0x18, 0x18, 0xE0, 0x00, 0x18, 0x08, 0x80, 0x00, 0x10, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xC0, 0x07, 0xC0, 0x03, 0xE0, 0x0C, 0xF0, 0x0E, 0x70, 0x1C, 0x3F, 0xFC, 0x18, 0x10, 0x03, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00};

    const uint8_t *frames[] = {
        frame0, frame1, frame2, frame3, frame4, frame5, frame6, frame7,
        frame8, frame9, frame10, frame11, frame12, frame13
    };

    for (int i = 0; i < 14; i++) {
        oled.clearDisplay();
        oled.drawBitmap(xx, yy, frames[i], 32, 32, 1); //draw the image
        oled.display();
        delay(tt); //delay
    }
}

void face(){
    int xx= 48, yy=16,tt=30;
    const unsigned char PROGMEM frame0 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x30, 0x0C, 0x60, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x10, 0x08, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80, 0x03, 0x80, 0x01, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x10, 0x08, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x10, 0x08, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80, 0x03, 0x80, 0x01, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x00, 0x00, 0x60, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x00, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x00, 0x00, 0x60, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80, 0x03, 0x80, 0x01, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x00, 0x00, 0x60, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x00, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame10 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80, 0x03, 0x80, 0x01, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x10, 0x08, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x10, 0x08, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame11 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x30, 0x0C, 0x60, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x10, 0x08, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame14 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame15 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame16 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame17 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame18 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame19 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame20 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame21 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame22 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame23 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame24 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame25 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame26 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const unsigned char PROGMEM frame27 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0xE0, 0x07, 0x80, 0x03, 0x80, 0x03, 0xC0, 0x03, 0x80, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x06, 0x00, 0x00, 0x60, 0x0E, 0x38, 0x1C, 0x70, 0x0E, 0x38, 0x1C, 0x30, 0x0C, 0x38, 0x1C, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x70, 0x06, 0x1F, 0xF8, 0x60, 0x07, 0x1F, 0xF8, 0xE0, 0x03, 0x80, 0x01, 0xC0, 0x01, 0xC0, 0x03, 0x80, 0x01, 0xE0, 0x07, 0x80, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    const uint8_t *frames[] = {
        frame0, frame1, frame2, frame3, frame4, frame5, frame6, frame7,
        frame8, frame9, frame10, frame11, frame12, frame13, frame14, frame15, frame16
        , frame17, frame18, frame19, frame20, frame21, frame22, frame23, frame24
        , frame25, frame26, frame27
    };

    for (int i = 0; i < 28; i++) {
        //oled.clearDisplay();
        oled.drawBitmap(xx, yy, frames[i], 32, 32, 1); //draw the image
        oled.display();
        delay(tt); //delay
    }
}
//Animation

//Screen and global function
void check_alarm_on(){ //--------------------------------------------------------------
    DateTime now = rtc.now();
    int jam=now.hour();
    int menit=now.minute();
    int noteDurations[] = {4, 8, 8, 4, 4, 4, 4, 4};
    int melody[] = {NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, 0, NOTE_B3, NOTE_C4};
    if(alarm_count>0){
        for(int i=0;i<alarm_count;i++){
            if(alaram[i].jam==jam && alaram[i].menit==menit){
                oled.clearDisplay();
                oled.display();
                alarm();
                for (int thisNote = 0; thisNote < 8; thisNote++) {
                    int noteDuration = 1000 / noteDurations[thisNote];
                    tone(SPEAKER_PIN, melody[thisNote], noteDuration);

                    int pauseBetweenNotes = noteDuration * 1.30;
                    delay(pauseBetweenNotes);
                    noTone(SPEAKER_PIN);
                }
                Serial.println("Alarm");
            }
        }
        oled.clearDisplay();
    }
    else return;
}

void static_screen(){//------------------------------
    if(current_time-last_press>=10000){
        while(digitalRead(GREEN_BUTTON_PIN)==HIGH && digitalRead(RED_BUTTON_PIN)==HIGH && digitalRead(BLUE_BUTTON_PIN)==HIGH){
            check_alarm_on();
            oled.clearDisplay();
            DateTime now = rtc.now();
            String waktu = String(now.hour()) + ':' + String(now.minute()) + ':' + String(now.second()) + "\n\n";
            oled.setCursor(41,29);
            oled.println(waktu);
            oled.display();
        }
        last_press=millis();
        //current_time=millis();
    }
    return;
}
void check_last_press(){
    if(digitalRead(GREEN_BUTTON_PIN)==LOW && digitalRead(RED_BUTTON_PIN)==LOW && digitalRead(BLUE_BUTTON_PIN)==LOW){
        last_press=millis();
        Serial.printf("%d", last_press);
    }
    current_time=millis();
    //Serial.printf("oke");
    static_screen();
}

void splash(){
    oled.clearDisplay();
    oled.setCursor(30, 8);
    oled.print(F("Tugas Akhir"));
    oled.setCursor(42, 26);
    oled.print(F("VI-ROSE"));
    oled.setCursor(23, 50);
    oled.print(F("-Rahmad Bisma-"));
    //face();
    oled.display();
    delay(1000);
    oled.clearDisplay();
    //anim();
    while(millis()<=2000) gear();
}
void get_time(){
        DateTime now = rtc.now();
        String waktu = String(now.hour()) + ':' + String(now.minute()) + ':' + String(now.second()) + "\n\n";
        oled.setCursor(0,0);
        oled.println("TIME:");
        oled.setCursor(31,0);
        oled.println(waktu);
}
void main_menu(){
    oled.clearDisplay();
    get_time();

    char menu[6][50]={"DHT", "LDR", "Alarm", "404Forget", "Quit()"};
    int start_point=12;
    int cursor=0;
    for(int i=0;i<5;i++){
        oled.setCursor(12, start_point);
        oled.println(menu[i]);
        start_point+=12;
    }
    oled.display();
    start_point=12;
    //oled.clearDisplay();
    //oled.setCursor(12, 0);
    //oled.println("")
}
//Screen

void setup() {
    Serial.begin(9600);  // Serial Monitor

    /* Setup OLED */
    if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {          // initialize OLED display with I2C address 0x3C
        Serial.println(F("failed to start SSD1306 OLED"));  // Handler
    }

    oled.clearDisplay();  // clear display
    oled.setTextSize(1);       // set text size
    oled.setTextColor(WHITE);  // set text color
    oled.setCursor(0, 0);      // set position to display (x,y)
    //oled.println("VI-ROSE11");   // set text
    //oled.display();            // display on OLED

    /* Setup Servo */
    servo.write(defpos);
    servo.attach(servoPin, 544, 2400); // diilangi

    /* Setup Button */
    pinMode(GREEN_BUTTON_PIN, INPUT_PULLUP);  // set ESP32 pin to input pull-up mode
    pinMode(RED_BUTTON_PIN, INPUT_PULLUP);    // set ESP32 pin to input pull-up mode
    pinMode(BLUE_BUTTON_PIN, INPUT_PULLUP);   // set ESP32 pin to input pull-up mode

    green_button_state = digitalRead(GREEN_BUTTON_PIN);
    red_button_state = digitalRead(RED_BUTTON_PIN);
    blue_button_state = digitalRead(BLUE_BUTTON_PIN);

    /* Setup LED */
    pinMode(GREEN_LED_PIN, OUTPUT);  // set ESP32 pin to output mode
    pinMode(RED_LED_PIN, OUTPUT);    // set ESP32 pin to output mode

    /* Setup RTC CLock */
    if (!rtc.begin()) {
        Serial.println("RTC TIDAK TERBACA");
    }
    if (!rtc.isrunning()) {
        Serial.println("RTC is NOT running!");
        rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));  // update rtc dari waktu komputer
    }

    /* Setup Speaker */
    pinMode(SPEAKER_PIN, OUTPUT);

    /* Setup DHT Sensor */
    dhtSensor.setup(DHT_PIN, DHTesp::DHT22);

    /* Setup LDR */
    pinMode(LDR_PIN, INPUT);

    splash(); //----------------------------------------
    delay(1000);
    last_press=millis();
    oled.clearDisplay();
}

//menu
void set_menu_dht(){
    oled.clearDisplay();
    get_time();
    oled.setCursor(0, 12);
    //oled.setTextSize(0.3);
    oled.println(">> DHT");
    oled.display();

    //DHTOUT
    TempAndHumidity data = dhtSensor.getTempAndHumidity();
    String temperatureString = "Temp: " + String(data.temperature, 1) + "°C\n";
    String humidityString = "Humidity: " + String(data.humidity, 1) + "%\n";
    float t=dhtSensor.getTemperature();
    float h=dhtSensor.getHumidity();
    float hic=dhtSensor.computeHeatIndex(t, h );

    String status;
    if(hic>=50) status ="Panas";
    else if(hic<50 && hic>=35) status ="Hangat";
    else if(hic<35 && hic>=20) status ="nyaman";
    else if(hic<20) status ="dingin";

    String DHT= temperatureString+humidityString;
    oled.setCursor(0, 30);
    oled.println(temperatureString);
    oled.setCursor(0, 42);
    oled.println(humidityString);
    oled.setCursor(0, 54);
    oled.println("stat: "+status);
    oled.display();
    Serial.printf("a%da b%db", (int)data.temperature, (int)data.humidity);

    float servopos=180*((100*(hic/750))/100);
    if(servopos>=180) servopos=180;
    else if(servopos<=0) servopos=0;
    Serial.printf("xxx%f %f %d %fxxx", t, h, (int)servopos, hic);
    if(hic<375){
        servo.write(servopos);
        digitalWrite(RED_LED_PIN, HIGH);
    }
    else {
        servo.write(servopos);
        digitalWrite(GREEN_LED_PIN, HIGH);
    }

    // if(hic<28 || hic>68){
    //     tone(SPEAKER_PIN, 500, 3000);
    //     //delay(3000);
    //     //digitalWrite(SPEAKER_PIN, LOW);
    // }

    //button
    while(1){
        check_alarm_on();
        temperature(); // animasi
        check_last_press(); //static screen
        if(green_button_on_press()==2){
            Serial.println("Back to Menu");
            break;
        }
    }
    
    //reset default
    digitalWrite(GREEN_LED_PIN, LOW);
    digitalWrite(RED_LED_PIN, LOW);
    //servo.write(defpos);
    servo.write(defpos);
}
void set_menu_ldr(){
    oled.clearDisplay();
    get_time();
    oled.setCursor(0, 12);
    oled.println(">> LDR");
    oled.display();

    //LDROUT
    int mid= 226931;
    int analogValue = analogRead(LDR_PIN);
    float voltage = analogValue / 1024. * 5;
    float resistance = 2000 * voltage / (1 - voltage / 5);
    float lux = pow(RL10 * 1e3 * pow(10, GAMMA) / resistance, (1 / GAMMA));
    String ldrString = "LDR: " + String(lux, 1) + " lux\n";
    //String ldr2string = "Stat: " +
    String status=lux > 1000 ? "Terang" : "Gelap";
    oled.setCursor(0 ,42);
    oled.println(ldrString);
    oled.setCursor(0, 54);
    oled.println("stat: "+ status);
    oled.display();
    Serial.printf("2%f2", lux);

    float servopos=(analogValue/100000*100)/100*180;
    if(servopos>=180) servopos=180;
    else if(servopos<=0) servopos=0;
    if(lux<mid){
        servo.write(servopos);
        digitalWrite(RED_LED_PIN, HIGH);
    }
    else {
        servo.write(servopos);
        digitalWrite(GREEN_LED_PIN, HIGH);
    }

    //if(analogValue<1000 || analogValue>9000) tone(SPEAKER_PIN, 500, 3000);

    //button
    while(1){
        check_alarm_on();
        bulb();
        check_last_press(); //static screen
        if(green_button_on_press()==2){
            Serial.println("Back to Menu");
            break;
        }
    }
    
    //reset default
    digitalWrite(GREEN_LED_PIN, LOW);
    digitalWrite(RED_LED_PIN, LOW);
    servo.write(defpos);

}

void alarm_custom_display(){
    int cursor = 24;
    oled.clearDisplay();
    get_time();
    oled.setCursor(0, 12);
    oled.println(">> Alarm");

    if(alarm_count>0){
        for(int i=0;i<alarm_count;i++){
            int x=i+1;
            String data="Alarm" + String(i+1) + " " + String(alaram[i].jam) + " " + String(alaram[i].menit);
            oled.setCursor(12, cursor);
            oled.println(data);
            cursor+=12;
        }
    }
    if(alarm_slot>0){
        oled.setCursor(12 ,cursor);
        oled.println("Set Alarm");
    }

    oled.display();
}
void add_alarm(){
    int jam=0, menit=0, fase=1;

    oled.clearDisplay();
    oled.setCursor(0,0);
    oled.println("New");
    oled.setCursor(0,12);
    oled.println("Alarm"+String(alarm_count+1));
    oled.display();
    
    while(1){
        //check_alarm_on();
        //check_last_press();
        if(jam>=24) jam=0;
        else if(jam<0) jam=23;
        if(menit>=60) menit=0;
        else if(menit<0) menit=59;

        if(digitalRead(RED_BUTTON_PIN)==LOW){
            if(red_button_on_press()) {
                if(fase==1) jam--;
                else if(fase==2) menit--;
                else if(fase==3) break;
            }
        }
        if(digitalRead(BLUE_BUTTON_PIN)==LOW){
            if(blue_button_on_press()) {
                if(fase==1) jam++;
                else if(fase==2) menit++;
            }
        }
        if(digitalRead(GREEN_BUTTON_PIN)==LOW){
            if(green_button_on_press()==2){
                if(fase==1) break;
                else if(fase==2) {
                    fase=1;
                    menit=0;
                }
            }
            if(green_button_on_press()==1){
                if(fase==1) fase=2;
                else if(fase==2) {
                    fase=3;
                }
                else if(fase==3){
                    alaram[alarm_count].jam=jam;
                    alaram[alarm_count].menit=menit;
                    alarm_slot-=1;
                    alarm_count+=1;
                    oled.setCursor(53 ,20);
                    oled.println("Alarm Added");
                    oled.display();
                    delay(1000);
                    break;
                }
            }
        }

        String hjam;
        String hmenit;
        if(fase==1){
            hjam = "Hour: "+String(jam) + " <";
            hmenit = "Minute: "+String(menit);
        }
        if(fase==2){
            hjam = "Hour: "+String(jam);
            hmenit = "Minute: "+String(menit) + " <";
        }
        
        
        oled.setCursor(0,24);
        oled.println(hjam);
        oled.setCursor(0,36);
        oled.println(hmenit);
        oled.display();
        Serial.printf("%d%d  ", jam, menit);
        if(fase==3){
            oled.setCursor(0,48);
            oled.println("Conf: G-Yes R-No <");
            oled.display();
        }
    }

}
void delete_alarm(int choice){
    Serial.printf("a%da", choice);
    oled.clearDisplay();
    oled.setCursor(0,0);
    oled.println("Delete");
    oled.setCursor(0,12);
    oled.println("Alarm"+String(choice+1));
    oled.setCursor(0,24);
    oled.println("Conf: G-Yes R-No");
    oled.display();

    while(1){
        //check_alarm_on();
        //check_last_press();
        if(digitalRead(RED_BUTTON_PIN)==LOW){
            if(red_button_on_press()) break;
        }
        if(digitalRead(GREEN_BUTTON_PIN)==LOW){
            if(green_button_on_press()){
                for(int i=choice;i<=alarm_count;i++){
                    alaram[i]=alaram[i+1];
                }
                Serial.printf("Alarm Deleted");
                oled.setCursor(0,40);
                oled.println("Alarm Deleted");
                oled.display();
                alarm_count-=1;
                alarm_slot+=1;
                delay(1000);
                break;
            }
        }
    }
}
void set_menu_alarm(){
    alarm_custom_display();
    int selection=0;

    while(1){
        check_alarm_on();
        check_last_press(); //static screen
        alarm_custom_display();//main mode screen
        if(digitalRead(RED_BUTTON_PIN)==LOW){
            if(red_button_on_press()) --selection;
        }
        if(digitalRead(BLUE_BUTTON_PIN)==LOW){
            if(blue_button_on_press()) ++selection;
        }
        if(digitalRead(GREEN_BUTTON_PIN)==LOW){
            if(green_button_on_press()==2){
                Serial.println("Back to Menu");
                break;
            }
            else if(green_button_on_press()==1){
                if(selection==alarm_count) add_alarm();//Serial.println("Knek");
                else delete_alarm(selection);//Serial.println("iso");
            }
        }
        int start_point=24;
        if(selection<0) selection=alarm_count-1;
        else if(selection>alarm_count) selection=0;
        for(int i=0;i<=selection;i++){
            oled.setCursor(0, start_point);
            if(i==selection) oled.println(">");
            else oled.println(" ");
            oled.display();
            start_point+=12;
        }
    }
}

void basic_template(){
    oled.clearDisplay();
    oled.setCursor(44, 0);
    oled.println("Level "+String(level));
    //oled.setCursor(0, 54);
    //oled.println("Ans: ");
    oled.drawRect(0,10,128,40, 1);
    oled.drawRect(42,10,42, 40, 1);
    oled.display();
}
void generate_level(){
    for(int i=0;i<level;i++){
        int minx = 0, maxx = 120; 
        int miny = 12, maxy = 40;
        x_pos[i]=(rand() % (maxx - minx + 1)) + minx;
        y_pos[i]=(rand() % (maxx - minx + 1)) + minx;
        if(x_pos[i]<=42) answer_set[i]=1;
        else if(x_pos[i]>42 && x_pos[i]<=84) answer_set[i]=2;
        else if(x_pos[i]>84) answer_set[i]=3;

        oled.setCursor(x_pos[i], y_pos[i]);
        oled.println(i+1);
        oled.display();
    }
}
int check_answer(int index, int answer){
    if(answer==answer_set[index]) return 1;
    else return 0;
}
int wrong_answer(int index){
    oled.setCursor(x_pos[index], y_pos[index]);
    oled.println(index);
    oled.setCursor(34, 30);
    oled.println("Wrong Answer");
    oled.display();
    delay(2000);
    oled.clearDisplay();
    oled.setCursor(39, 20);
    oled.println("Try Again?");
    oled.setCursor(35, 32);
    oled.println("G-Yes R-No");
    oled.display();

    while(1){
        if(digitalRead(GREEN_BUTTON_PIN)==LOW) return 1;
        else if (digitalRead(RED_BUTTON_PIN)==LOW) return 0;
    }
}
int lanjut(){
    oled.setCursor(27, 26);
    oled.println("Level Finished");
    delay(2000);
    oled.clearDisplay();
    oled.setCursor(39, 20);
    oled.println("Continue?");
    oled.setCursor(35, 32);
    oled.println("G-Yes R-No");
    oled.display();

    while(1){
        if(digitalRead(GREEN_BUTTON_PIN)==LOW) return 1;
        else if (digitalRead(RED_BUTTON_PIN)==LOW) return 0;
    }
}
void start(){
    basic_template();
    oled.setCursor(44, 26);
    oled.println("Level "+String(level));
    oled.display();
    delay(3000);
    generate_level();
    delay(5000);
    basic_template();
}
void set_menu_game(){ //--------------------------------------------------------------
    // int level=0;
    // int x_pos[21];
    // int y_pos[21];
    int answer_inp[21];
    int each_answer_state=1;
    int answer=0;
    int answer_count=0;

    int cursor=35;
    start();

    // basic_template();
    // oled.setCursor(44, 26);
    // oled.println("Level "+String(level));
    // delay(3000);
    // generate_level();
    // delay(5000);
    // basic_template();
    
    while(1){
        if(mistakes>=5){
            level=0;
            mistakes=0;
        }
        if(digitalRead(RED_BUTTON_PIN)==LOW){
            if(red_button_on_press()) {
                if(check_answer(answer_count, 2)){
                    answer_inp[answer_count]=2;
                    answer_count++;
                }
                else{
                    mistakes+=1;
                    if(wrong_answer(answer_count)){
                        //reset value
                        answer_count=0;
                        start();
                    }
                    else break;
                }
            }
        }
        if(digitalRead(BLUE_BUTTON_PIN)==LOW){
            if(blue_button_on_press()) {
                if(check_answer(answer_count, 3)){
                    answer_inp[answer_count]=2;
                    answer_count++;
                }
                else{
                    mistakes+=1;
                    if(wrong_answer(answer_count)){
                        //reset value
                        answer_count=0;
                        start();
                    }
                    else break;
                }
            }
        }
        if(digitalRead(GREEN_BUTTON_PIN)==LOW){
            if(green_button_on_press()==2) break;
            if(green_button_on_press()==1) {
                if(check_answer(answer_count, 1)){
                    answer_inp[answer_count]=2;
                    answer_count++;
                }
                else{
                    mistakes+=1;
                    if(wrong_answer(answer_count)){
                        //reset value
                        answer_count=0;
                        start();
                    }
                    else break;
                }
            }
        }
        basic_template();
        oled.setCursor(0, 54);
        oled.println("Ans("+String(answer_count+1)+"): ");
        for(int i=0;i<answer_count;i++){
            oled.setCursor(cursor, 54);
            cursor+=10;
        }
        cursor=35;
        
        // check level end
        if(answer_count==level){
            level+=1;
            Serial.print("LevelFinished");
            if(lanjut()){
                answer_count=0;
                start();
            }
            else break;
        }
        
    }
}

void quit(){
    oled.clearDisplay();
    oled.setCursor(29,29);
    oled.println("It Does Nothing");
    oled.display();
    // delay(1500);
    // oled.clearDisplay();
    // oled.setCursor(32,29);
    // oled.println("But, Wait!");
    // oled.display();
    // delay(2000);
    // oled.clearDisplay();
    // oled.setCursor(27,29);
    // oled.println("Stay a while");
    // oled.display();

    while(1){
        if(green_button_on_press()==2){
            Serial.println("Back to Menu");
            break;
        }
    }
}

void menu_selection(int choice){
    Serial.printf("Selected menu %d", choice+1);
    if(choice==0) set_menu_dht();
    else if(choice==1) set_menu_ldr();
    else if(choice==2) set_menu_alarm();
    else if(choice==3) set_menu_game();
    else if(choice==4) quit();
}
//menu

int arrow=0;
void loop(){
    //servo.write(defpos);
    check_last_press(); //static screen
    check_alarm_on(); // alarm
    main_menu();
    int start_point=12;
    
    //damn button
    if(digitalRead(RED_BUTTON_PIN)==LOW){
        if(red_button_on_press()) --arrow;
    }
    if(digitalRead(BLUE_BUTTON_PIN)==LOW){
        if(blue_button_on_press()) ++arrow;
    }
    if(digitalRead(GREEN_BUTTON_PIN)==LOW){
        if(green_button_on_press()) menu_selection(arrow);
    }
    //Serial.printf("%d", arrow);

    if(arrow<0) arrow=4;
    else if(arrow>4) arrow=0;
    for(int i=0;i<=arrow;i++){
        oled.setCursor(0, start_point);
        if(i==arrow) oled.println(">");
        else oled.println(" ");
        oled.display();
        start_point+=12;
    }

    

}